{"version":3,"sources":["components/statements/utility.ts","Types.ts","components/Helpers.ts","components/FileSelector.tsx","components/TrackDetails.tsx","components/Filters.tsx","components/Retailers.tsx","components/Locations.tsx","components/parseObj.ts","components/artists/artistMapping.ts","components/artists/artist.ts","components/Home.tsx","components/login/utility.ts","components/artists/ArtistsImport.tsx","components/artists/ArtistsManager.ts","App.tsx","components/login/Login.tsx","components/artists/Management.tsx","reportWebVitals.ts","index.tsx"],"names":["loadFile","file","a","Promise","resolve","reject","reader","FileReader","onload","e","data","target","result","name","onerror","readAsBinaryString","files","reduce","acc","then","fileData","statementColMap","Artist","ContentType","DeliveryMethod","Distributor","ISRC","Label","PeriodFrom","PeriodTo","Quantity","ReleaseTitle","Revenue","Territory","TrackTitle","Date","UPC","CountryName","TotalDownloads","AmountCurrency","Ignore","toStatement","rowObj","dataObj","Object","keys","forEach","col","objKey","find","key","includes","toLowerCase","console","log","getMultiByKeyProp","byKeyProp","row","push","FileSelector","label","onLoad","React","useState","displayFiles","setDisplayFiles","selectedFiles","setSelectedFiles","Box","Button","variant","component","type","onChange","Array","from","hidden","multiple","length","border","padding","map","i","onClick","loadFiles","StatementsSelector","onStatementsSelect","asRows","values","sheetData","testCols","cols","workbook","XLSX","sheetName","SheetNames","workSheet","Sheets","sheetRange","decode_range","testJson","sheet_to_csv","RS","startIndex","split","index","fullCols","filter","h","Error","sheet_to_json","range","s","c","r","loadStatementFile","TrackDetails","sheet","byIsrc","rows","isrc","id","track","title","quantity","revenue","artist","style","height","width","columns","field","headerName","ALL","SERIES_TYPES","Filters","onFiltersChanged","currentArtist","setCurrentArtist","currentSeries","setCurrentSeries","allArtists","setAllArtists","useEffect","artists","streamOrRevenue","Select","value","margin","MenuItem","series","Retailers","byRetailer","setByRetailer","setSeries","currentCategories","setCategories","availableSeries","setAvailableSeries","selectedSeries","setSelectedSeries","categories","retailer","streams","revTotal","streamTotal","options","chart","plotOptions","bar","borderRadius","horizontal","dataLabels","enabled","xaxis","Locations","byLocation","setByLocation","locations","setLocations","setData","getByLocation","labels","responsive","breakpoint","legend","position","Math","floor","random","ParseObj","parseObj","this","className","ArtistMapping","get","getMappings","byId","query","Parse","Query","parseObjs","mappedTo","mapping","save","getArtists","obj","Home","setSheet","mappings","setMappings","mapArtists","doUserRegistration","username","password","User","signUp","current","alert","doUserLogin","logIn","doUserLogout","logOut","ArtistsImport","manager","statementArtists","setArtists","neither","setNeither","artistSort","useCallback","sortNames","mapped","UnknownArtists","names","onUpdate","ExistingArtists","ExistingMappings","m","ArtistImport","isMapping","setIsMapping","createArtist","GetArtist","onSelect","createMapping","selected","setSelected","artistsByName","artistForName","ArtistsManager","existingArtists","existingMappings","mappingsByName","params","newArtist","newMapping","componentMap","login","setUsername","setPassword","currentUser","setCurrentUser","undefined","user","getUsername","display","justifyContent","paddingRight","TextField","setStatementArtists","setManager","Set","d","artistsFromSheetData","userRequired","useComponent","queryParams","search","useLocation","useMemo","URLSearchParams","useQuery","entries","has","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","serverURL","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.b2502cdc.chunk.js","sourcesContent":["import { StatementRow } from '../../Types'\n\nexport type FileData = {\n  [fileName: string]: string\n}\n\nexport async function loadFile(file: File): Promise<{name: string, data: string}> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const data = e.target?.result as string\n      resolve({ name: file.name, data })\n    }\n    reader.onerror = reject\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport async function loadFiles(files: File[]) {\n  return files.reduce((acc: Promise<FileData>, file) => {\n    return acc.then((fileData) => {\n      return loadFile(file).then(({name, data}) => {\n        fileData[name] = data\n        return fileData\n      })\n    })\n  }, Promise.resolve({}))\n}\n\nexport function artistsFromSheetData(data: StatementRow[]) {\n  return Array.from(new Set(data.map((d) => d.Artist)))\n}\n","export interface StatementRow {\n  Artist: string\n  ContentType: string\n  DeliveryMethod: string\n  Distributor: string\n  ISRC: string\n  Label: string\n  PeriodFrom: string\n  PeriodTo: string\n  Quantity: number\n  ReleaseTitle: string\n  Revenue: number\n  Territory: string\n  TrackTitle: string\n  UPC: string\n}\n\nexport const statementColMap: {[key: string]: string[]} = {\n  Artist: ['artist'],\n  ContentType: ['content type'],\n  DeliveryMethod: ['delivery method', 'product'],\n  Distributor: ['distributor', 'store', 'service'],\n  ISRC: ['isrc'],\n  Label: ['label'],\n  PeriodFrom: ['period from', 'sales start date'],\n  PeriodTo: ['period to', 'sales end date'],\n  Quantity: ['quantity', 'total plays'],\n  ReleaseTitle: ['release title', 'album name', 'release'],\n  Revenue: ['revenue', 'amount'],\n  Territory: ['territory', 'country iso'],\n  TrackTitle: ['track title', 'track name', 'track'],\n\n  Date: ['date', 'transaction date'],\n  UPC: ['upc', 'ean/upc'],\n  CountryName: ['country name'],\n  TotalDownloads: ['total downloads'],\n  AmountCurrency: ['amount currency'],\n\n  Ignore: ['cat. no.', 'suitebeats comp.']\n}\n","import * as XLSX from 'xlsx'\nimport { statementColMap, StatementRow } from '../Types'\n\nfunction toStatement(rowObj: {[key: string]: string}): StatementRow {\n  const dataObj: {[key: string]: string} = {}\n  Object.keys(rowObj).forEach((col) => {\n    const objKey = Object.keys(statementColMap).find((key) => {\n      return statementColMap[key].includes(col.toLowerCase())\n    })\n    if (!objKey) {\n      console.log('not mapping:', col, rowObj[col])\n    } else if (objKey !== 'Ignore') {\n      dataObj[objKey] = rowObj[col]\n    }\n  })\n  return dataObj as unknown as StatementRow\n}\n\nexport function loadStatementFile(data: string): StatementRow[] {\n  const testCols = Object.values(statementColMap).reduce((acc: string[], cols) => {\n    acc.push(...cols)\n    return acc\n  }, [])\n  const workbook = XLSX.read(data, {\n    type: 'binary'\n  });\n  const sheetName = workbook.SheetNames[0]\n  const workSheet = workbook.Sheets[sheetName]\n  const sheetRange = XLSX.utils.decode_range(workSheet['!ref']!)\n  const testJson = XLSX.utils.sheet_to_csv(workSheet, { RS: '\\n'})\n  let startIndex = -1\n  testJson.split('\\n').forEach((row, index) => {\n    if (startIndex >= 0) return\n    const fullCols = row.split(',').filter((h) => !!h)\n    const cols = fullCols.filter((col) => testCols.includes(col.toLowerCase()))\n    if (cols.length > fullCols.length / 2) {\n      startIndex = index\n    }\n  })\n  if (startIndex < 0) {\n    throw new Error('header row not found')\n  }\n\n  const asJson = XLSX.utils.sheet_to_json<{[key: string]: string}>(workSheet, { range: { s: { c:0, r:startIndex }, e: sheetRange.e}})\n  return asJson.map(toStatement)\n}\n\nexport function getByIsrc(data: StatementRow[]) {\n  return getMultiByKeyProp('ISRC', data)\n}\n\nexport function getByTerritory(data: StatementRow[]) {\n  return getMultiByKeyProp('Territory', data)\n}\n\nexport function getByArtist(data: StatementRow[]) {\n  return getMultiByKeyProp('Artist', data)\n}\n\nexport function getByRetailer(data: StatementRow[]) {\n  return getMultiByKeyProp('Distributor', data)\n}\n\nexport function getByLocation(data: StatementRow[]) {\n  return getMultiByKeyProp('Territory', data)\n}\n\nexport function getMultiByKeyProp(key: keyof StatementRow, data: StatementRow[]) {\n  const byKeyProp: {[key: string]: StatementRow[]} = {}\n  data.forEach((row) => {\n    !byKeyProp[row[key]] && (byKeyProp[row[key]] = [])\n    byKeyProp[row[key]].push(row)\n  })\n  return byKeyProp\n}\n\nexport function consolidateRvByDate(data: StatementRow[]) {\n  const byDate: { [key: string]: number } = {}\n  data?.forEach((d) => {\n    !byDate[d.PeriodTo] && (byDate[d.PeriodTo] = 0)\n    byDate[d.PeriodTo] += d.Revenue\n  })\n  return byDate\n}\n","import React from 'react';\nimport { Box, Button } from '@material-ui/core'\nimport { FileData, loadFiles } from './statements/utility'\nimport { StatementRow } from '../Types'\nimport { loadStatementFile } from './Helpers'\n\nfunction FileSelector({ label, onLoad }: { label?: string; onLoad: (data: FileData) => void }) {\n  const [displayFiles, setDisplayFiles] = React.useState(false)\n  const [selectedFiles, setSelectedFiles] = React.useState<File[]>([])\n\n  function filesSelected(e: any) {\n    setSelectedFiles(Array.from(e.target.files))\n  }\n\n  function processFiles() {\n    loadFiles(selectedFiles).then(onLoad).then(() => setDisplayFiles(false))\n  }\n\n  if (!displayFiles) {\n    return <Box><Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setDisplayFiles(true)}\n    >Select Files</Button>\n    </Box>\n  }\n\n  return <Box><Button\n    variant=\"contained\"\n    component=\"label\"\n  >\n    Select Files\n    <input\n      type=\"file\"\n      onChange={filesSelected}\n      hidden\n      multiple\n    />\n  </Button>\n    {!!selectedFiles.length && <Box border={'1px solid'} padding={'5px'}>\n      <Box>Selected Files:</Box>\n      <Box padding={'5px'}>\n        {selectedFiles.map((file, i) => <Box key={i}>{file.name}</Box>)}\n        <Box><Button onClick={processFiles}>{label || 'DoIt'}</Button></Box>\n      </Box>\n    </Box>}\n  </Box>\n}\n\nexport function StatementsSelector({onStatementsSelect, label}: {label?: string, onStatementsSelect: (rows: StatementRow[]) => void}) {\n  function onSelect(data: FileData) {\n    const asRows = Object.values(data).reduce((acc: StatementRow[], sheetData) => {\n      acc.push(...loadStatementFile(sheetData))\n      return acc\n    }, [])\n    onStatementsSelect(asRows)\n  }\n\n  return <FileSelector onLoad={onSelect} label={label} />\n}\n","import { DataGrid, GridColDef, GridRowData, GridRowsProp } from '@material-ui/data-grid'\nimport { StatementRow } from '../Types'\nimport { getByIsrc } from './Helpers'\n\nexport default function TrackDetails({ sheet }: { sheet: StatementRow[]}) {\n  const cols: GridColDef[] = [\n    { field: 'title', headerName: 'Title', width: 150 },\n    { field: 'artist', headerName: 'Artist', width: 150 },\n    { field: 'quantity', headerName: 'Quantity', width: 150 },\n    { field: 'revenue', headerName: 'Revenue', width: 150 }\n  ]\n\n  const byIsrc = getByIsrc(sheet)\n  const rows: GridRowsProp = Object.keys(byIsrc).map((isrc, i) => {\n    const data: GridRowData = { id: i }\n    byIsrc[isrc].forEach((track) => {\n      data.title = track.TrackTitle\n      !data.quantity && (data.quantity = 0)\n      data.quantity += track.Quantity\n      !data.revenue && (data.revenue = 0)\n      data.revenue += track.Revenue\n      data.artist = track.Artist\n    })\n    return data\n  })\n\n  return <div style={{ height: 300, width: '100%' }}>\n    <DataGrid rows={rows} columns={cols}></DataGrid>\n  </div>\n}\n","import React from 'react'\nimport { StatementRow } from '../Types'\nimport { Box, MenuItem, Select } from '@material-ui/core'\n\nexport const ALL = 'all'\nconst SERIES_TYPES = ['streams', 'revenue']\n\nexport interface IFilters {\n  artist: string\n  streamOrRevenue: string\n}\n\nexport default function Filters({ sheet, onFiltersChanged }: { sheet: StatementRow[], onFiltersChanged: (filters: IFilters) => void}) {\n  const [currentArtist, setCurrentArtist] = React.useState('')\n  const [currentSeries, setCurrentSeries] = React.useState('')\n  const [allArtists, setAllArtists] = React.useState<string[]>([])\n\n  React.useEffect(() => {\n    const artists: string[] = []\n    sheet.forEach((row) => {\n      if (row.Artist && !artists.includes(row.Artist)) {\n        artists.push(row.Artist)\n      }\n    })\n    setAllArtists(artists)\n    setCurrentArtist(ALL)\n    setCurrentSeries(SERIES_TYPES[0])\n  }, [sheet])\n\n  React.useEffect(() => {\n    onFiltersChanged({ artist: currentArtist, streamOrRevenue: currentSeries})\n  }, [currentSeries, currentArtist, onFiltersChanged])\n\n  return <Box>\n    <Select\n      value={currentArtist}\n      onChange={(e) => setCurrentArtist(e.target.value as string)}\n      style={{padding: 6, margin: 6}}\n    >\n      <MenuItem value={ALL}>All</MenuItem>\n      {allArtists.map((a) => <MenuItem key={a} value={a}>{a}</MenuItem>)}\n    </Select>\n    <Select\n      value={currentSeries}\n      onChange={(e) => setCurrentSeries(e.target.value as string)}\n      style={{padding: 6, margin: 6}}\n    >\n      {SERIES_TYPES.map((series) => {\n        return <MenuItem key={series} value={series}>{series}</MenuItem>\n      })}\n    </Select>\n  </Box>\n}","import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { StatementRow } from '../Types'\nimport { getByRetailer } from './Helpers'\nimport { ApexOptions } from 'apexcharts'\nimport { Box } from '@material-ui/core'\nimport Filters, { ALL, IFilters } from './Filters'\n\nexport default function Retailers({ sheet }: { sheet: StatementRow[] }) {\n  const [byRetailer, setByRetailer] = React.useState<{[retailer: string]: StatementRow[]}>({})\n  const [currentSeries, setSeries] = React.useState<{ data: number[] }[]>([])\n  const [currentCategories, setCategories] = React.useState<string[]>([])\n  const [currentArtist, setCurrentArtist] = React.useState('')\n  const [availableSeries, setAvailableSeries] = React.useState<{[label: string]: number[]}>({})\n  const [selectedSeries, setSelectedSeries] = React.useState('')\n\n  React.useEffect(() => {\n    const byRetailer = getByRetailer(sheet)\n    const categories: string[] = []\n    Object.keys(byRetailer).forEach((retailer) => {\n      categories.push(retailer)\n    })\n    setByRetailer(byRetailer)\n    setCategories(categories)\n  }, [sheet])\n\n  React.useEffect(() => {\n    const revenue: number[] = []\n    const streams: number[] = []\n    Object.keys(byRetailer).forEach((retailer) => {\n      let revTotal = 0\n      let streamTotal = 0\n      byRetailer[retailer].forEach((track) => {\n        if (currentArtist === ALL || currentArtist === track.Artist) {\n          revTotal += track.Revenue\n          streamTotal += track.Quantity\n        }\n      })\n      revenue.push(revTotal)\n      streams.push(streamTotal)\n    })\n    setAvailableSeries({ revenue, streams })\n    setSeries([{ data: streams }])\n  }, [currentArtist, byRetailer])\n\n  React.useEffect(() => {\n    if (availableSeries[selectedSeries]) {\n      setSeries([{data: availableSeries[selectedSeries]}])\n    }\n  }, [selectedSeries, availableSeries])\n\n  function onFilterChange({ artist, streamOrRevenue }: IFilters) {\n    setCurrentArtist(artist)\n    setSelectedSeries(streamOrRevenue)\n  }\n\n  const options: ApexOptions = {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        horizontal: true,\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    xaxis: {\n      categories: currentCategories,\n    }\n  }\n  return <Box>\n    <Filters sheet={sheet} onFiltersChanged={onFilterChange} />\n    <ReactApexChart options={options} series={currentSeries} type=\"bar\" height={350} />\n  </Box>\n}\n","import React from 'react'\nimport { StatementRow } from '../Types'\nimport { getByLocation } from './Helpers'\nimport { ApexOptions } from 'apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport { Box } from '@material-ui/core'\nimport Filters, { ALL, IFilters } from './Filters'\n\nexport default function Locations({ sheet }: { sheet: StatementRow[] }) {\n  const [byLocation, setByLocation] = React.useState<{ [location: string]: StatementRow[]}>({})\n  const [locations, setLocations] = React.useState<string[]>([])\n  const [currentArtist, setCurrentArtist] = React.useState('')\n  const [selectedSeries, setSelectedSeries] = React.useState('')\n  const [data, setData] = React.useState<number[]>([])\n  const [availableSeries, setAvailableSeries] = React.useState<{[label: string]: number[]}>({})\n\n  React.useEffect(() => {\n    const byLocation = getByLocation(sheet)\n    setLocations(Object.keys(byLocation))\n    setByLocation(byLocation)\n  }, [sheet])\n\n  React.useEffect(() => {\n    const revenue: number[] = []\n    const streams: number[] = []\n    Object.keys(byLocation).forEach((retailer) => {\n      let revTotal = 0\n      let streamTotal = 0\n      byLocation[retailer].forEach((track) => {\n        if (currentArtist === ALL || currentArtist === track.Artist) {\n          revTotal += track.Revenue\n          streamTotal += track.Quantity\n        }\n      })\n      revenue.push(revTotal)\n      streams.push(streamTotal)\n    })\n    setAvailableSeries({ revenue, streams })\n  }, [currentArtist, byLocation])\n\n  React.useEffect(() => {\n    if (availableSeries[selectedSeries]) {\n      setData([...availableSeries[selectedSeries]])\n    }\n  }, [selectedSeries, availableSeries])\n\n  function onFilterChange({ artist, streamOrRevenue }: IFilters) {\n    setCurrentArtist(artist)\n    setSelectedSeries(streamOrRevenue)\n  }\n\n  const options = (): ApexOptions => ({\n    chart: {\n      type: 'donut',\n    },\n    labels: locations,\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          width: 200\n        },\n        legend: {\n          position: 'bottom'\n        }\n      }\n    }]\n  })\n\n  return <Box>\n    <Filters sheet={sheet} onFiltersChanged={onFilterChange} />\n    <ReactApexChart options={options()} series={data} type=\"donut\" height={350 + Math.floor(Math.random() * 2) + 1} />\n  </Box>\n}\n","import Parse from 'parse'\n\nexport interface IParseObj {\n  parseObj: Parse.Object\n}\n\nexport class ParseObj {\n  parseObj: Parse.Object\n  constructor(parseObj: Parse.Object) {\n    this.parseObj = parseObj\n  }\n  get id() {\n    return this.parseObj.id\n  }\n}\n","import Parse from 'parse'\nimport { ParseObj } from '../parseObj'\nimport { IArtist } from './artist'\n\nconst className = 'ArtistMapping'\n\nexport interface IArtistMapping {\n  name: string\n  mappedTo: IArtist\n}\n\nclass ArtistMapping extends ParseObj {\n  artist: IArtist\n\n  constructor(parseObj: Parse.Object, artist: IArtist) {\n    super(parseObj)\n    this.artist = artist\n  }\n\n  get name() {\n    return this.parseObj.get('name')\n  }\n  get mappedTo() {\n    return this.artist\n  }\n}\n\nexport async function getMappings(allArtists: IArtist[]) {\n  const byId = allArtists.reduce((acc: {[id: string]: IArtist}, artist) => {\n    acc[artist.id] = artist\n    return acc\n  }, {})\n  const query = new Parse.Query(className)\n  return query.find()\n    .then((parseObjs) => {\n      return parseObjs.reduce((acc: {[n: string]: IArtistMapping}, parseObj) => {\n        const artist = new ArtistMapping(parseObj, byId[parseObj.get('mappedTo').id])\n        acc[artist.name] = artist\n        return acc\n      }, {})\n    })\n}\n\nexport async function createMapping({ name, mappedTo }: {\n  name: string\n  mappedTo: IArtist\n}): Promise<IArtistMapping> {\n  const mapping = new Parse.Object(className, { name, mappedTo: mappedTo.parseObj })\n  return mapping.save().then((parseObj) => new ArtistMapping(parseObj, mappedTo))\n}\n","import Parse from 'parse'\nimport { IParseObj, ParseObj } from '../parseObj'\nimport { StatementRow } from '../../Types'\nimport { IArtistMapping } from './artistMapping'\n\nconst className = 'Artist'\n\nexport interface IArtist extends IParseObj{\n  id: string\n  name: string\n}\n\nexport class Artist extends ParseObj {\n  get name() {\n    return this.parseObj.get('name')\n  }\n}\n\nexport async function getArtists() {\n  const query = new Parse.Query(className)\n  return query.find().then((parseObjs) => parseObjs.map((obj) => new Artist(obj)))\n}\n\nexport async function createArtist({ name }: { name: string }) {\n  const artist = new Parse.Object(className, { name })\n  return artist.save().then((parseObj) => new Artist(parseObj))\n}\n\nexport function mapArtists(rows: StatementRow[], mapping: {[name: string]: IArtistMapping}) {\n  return rows.map((row) => {\n    row.Artist = mapping[row.Artist]?.mappedTo.name || row.Artist\n    return row\n  })\n}\n","import React from 'react'\nimport { StatementRow } from '../Types'\nimport { StatementsSelector } from './FileSelector'\nimport TrackDetails from './TrackDetails'\nimport Retailers from './Retailers'\nimport Locations from './Locations'\nimport { Box } from '@material-ui/core'\nimport { getMappings, IArtistMapping } from './artists/artistMapping'\nimport { getArtists, mapArtists } from './artists/artist'\n\nexport default function Home() {\n  const [sheet, setSheet] = React.useState<StatementRow[]>([])\n  const [mappings, setMappings] = React.useState<{[name: string]: IArtistMapping}>()\n\n  React.useState(() => {\n    getArtists().then((allArtists) => {\n      getMappings(allArtists).then(setMappings)\n    })\n  })\n\n  if (!mappings) return <Box>Loading...</Box>\n\n  function onStatementsSelect(rows: StatementRow[]) {\n    if (!mappings) {\n      setSheet(rows)\n    } else {\n      setSheet(mapArtists(rows, mappings))\n    }\n  }\n\n  return <Box style={{ padding: 25 }}>\n    <Box style={{ padding: 25 }}>\n      <StatementsSelector onStatementsSelect={onStatementsSelect} />\n    </Box>\n    {!!sheet.length && <Box style={{ padding: 25, border: 'solid 1px' }}>\n      Tracks\n      <div style={{ padding: 25 }}>\n        <TrackDetails sheet={sheet} />\n      </div>\n      Retailers\n      <div style={{ padding: 25 }}>\n        <Retailers sheet={sheet} />\n      </div>\n      Locations\n      <div style={{ padding: 25 }}>\n        <Locations sheet={sheet} />\n      </div>\n    </Box>\n    }\n  </Box>\n}\n","import Parse from 'parse'\n\nexport type User = Parse.User\n\nexport function getCurrentUser() {\n  return Parse.User.current()\n}\n\nexport async function doUserRegistration({ username, password}: {\n  username: string\n  password: string\n}): Promise<User | undefined> {\n  try {\n    await Parse.User.signUp(username, password, {})\n    return await Parse.User.current()\n  } catch (error: any) {\n    alert(`Error! ${error}`)\n  }\n}\n\nexport async function doUserLogin({ username, password}: {\n  username: string\n  password: string\n}): Promise<User | undefined> {\n  try {\n    await Parse.User.logIn(username, password)\n    return await Parse.User.current()\n  } catch (error: any) {\n    alert(`Error! ${error}`)\n  }\n}\n\nexport async function doUserLogout() {\n  return Parse.User.logOut()\n}\n","import React from 'react';\nimport { Box, Button, MenuItem, Select } from '@material-ui/core'\nimport { IArtist } from './artist'\nimport { ArtistsManager, IArtistsByName, IMappingsByName } from './ArtistsManager'\n\nexport function ArtistsImport({manager, statementArtists}: {\n  manager: ArtistsManager\n  statementArtists: string[]\n}) {\n  const [mappings, setMappings] = React.useState<IMappingsByName>({})\n  const [artists, setArtists] = React.useState<IArtistsByName>({})\n  const [neither, setNeither] = React.useState<string[]>([])\n\n  const artistSort = React.useCallback(() => {\n    const {artists, mapped, neither} = manager.sortNames(statementArtists)\n    setArtists(artists)\n    setMappings(mapped)\n    setNeither(neither)\n  }, [manager, statementArtists])\n\n  React.useEffect(() => {\n    artistSort()\n  }, [artistSort])\n\n  return <Box>\n    <UnknownArtists names={neither} manager={manager} onUpdate={artistSort}/>\n    <ExistingArtists artists={artists} />\n    <ExistingMappings mappings={mappings} />\n  </Box>\n}\n\nfunction ExistingArtists({ artists }: { artists: IArtistsByName }) {\n  return <Box border={'solid 1px'} padding={'5px'}>\n    <Box><b>Artists</b></Box>\n    <Box padding={'10px'}>{Object.values(artists).map((a, i) => <Box key={i}>{a.name}</Box>)}</Box>\n  </Box>\n}\n\nfunction ExistingMappings({ mappings }: { mappings: IMappingsByName }) {\n  return <Box border={'solid 1px'} padding={'5px'}>\n    <Box><b>Mappings</b></Box>\n    <Box padding={'10px'}>{Object.values(mappings).map((m, i) => <Box key={i}>{m.name}<b>{' MAPPED TO: '}</b>{m.mappedTo.name}</Box>)}</Box>\n  </Box>\n}\n\nfunction UnknownArtists({ names, manager, onUpdate }: { names: string[]; manager: ArtistsManager; onUpdate: () => void }) {\n  return <Box border={'solid 1px'} padding={'5px'}>\n    <Box><b>Unknown Artists</b></Box>\n    <Box padding={'10px'}>{names.map((name) => <ArtistImport manager={manager} name={name} onUpdate={onUpdate}/>)}</Box>\n  </Box>\n}\n\nfunction ArtistImport({ name, manager, onUpdate }: {\n  name: string\n  manager: ArtistsManager\n  onUpdate: () => void\n}) {\n  const [isMapping, setIsMapping] = React.useState(false)\n\n  function doIt() {\n    manager.createArtist({ name }).then(onUpdate)\n  }\n\n  function doMapping(mappedTo: IArtist) {\n    manager.createMapping({ name, mappedTo }).then(onUpdate)\n  }\n\n  return <Box>\n    <Box>\n      {name}\n      <Button onClick={doIt}>Import</Button>\n      <Button onClick={() => setIsMapping(true)}>Map To Existing</Button>\n    </Box>\n    {isMapping && <GetArtist manager={manager} onSelect={doMapping} />}\n  </Box>\n}\n\nfunction GetArtist({ manager, onSelect }: {\n  manager: ArtistsManager\n  onSelect: (artist: IArtist) => void\n}) {\n  const [selected, setSelected] = React.useState<string>()\n\n  return <Box>\n    <Select\n      value={selected}\n      onChange={(e) => setSelected(e.target.value as string)}\n    >\n      {Object.keys(manager.artistsByName).map((key) => <MenuItem key={key} value={key}>{key}</MenuItem>)}\n    </Select>\n    {selected && <Button onClick={() => onSelect(manager.artistForName(selected))}>Map It</Button>}\n  </Box>\n}\n","import { createMapping, IArtistMapping } from './artistMapping'\nimport { createArtist, IArtist } from './artist'\n\nexport type IArtistsByName = {\n  [name: string]: IArtist\n}\n\nexport type IMappingsByName = {\n  [name: string]: IArtistMapping\n}\n\ninterface INameSort {\n  artists: IArtistsByName\n  mapped: IMappingsByName\n  neither: string[]\n}\n\nexport class ArtistsManager {\n  artistsByName: {[name: string]: IArtist}\n  mappingsByName: {[name: string]: IArtistMapping}\n\n  constructor(existingArtists: IArtist[], existingMappings: {[name: string]: IArtistMapping}) {\n    this.artistsByName = existingArtists.reduce((acc: {[name: string]: IArtist}, artist) => {\n      acc[artist.name] = artist\n      return acc\n    }, {})\n    this.mappingsByName = existingMappings\n  }\n\n  createArtist(params: { name: string }) {\n    return createArtist(params).then((newArtist) => {\n      this.artistsByName[newArtist.name] = newArtist\n      return newArtist\n    })\n  }\n\n  createMapping(params: { name: string, mappedTo: IArtist}) {\n    return createMapping(params).then((newMapping) => {\n      this.mappingsByName[newMapping.name] = newMapping\n      return newMapping\n    })\n  }\n\n  artistForName(name: string) {\n    return this.artistsByName[name]\n  }\n  mappingForName(name: string) {\n    return this.mappingsByName[name]\n  }\n\n  sortNames(names: string[]) {\n    return names.reduce(({artists, mapped, neither}: INameSort, name) => {\n      if (this.artistsByName[name]) {\n        artists[name] = this.artistsByName[name]\n      } else if (this.mappingsByName[name]) {\n        mapped[name] = this.mappingsByName[name]\n      } else {\n        neither.push(name)\n      }\n      return {artists, mapped, neither}\n    }, {artists: {}, mapped: {}, neither: []})\n  }\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom'\nimport './App.css';\nimport Home from './components/Home'\nimport { Box } from '@material-ui/core'\nimport Login from './components/login/Login';\nimport { Management } from './components/artists/Management';\nimport Parse from 'parse'\n\nfunction useQuery() {\n  const { search } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst componentMap = {\n  login: Login,\n  artists: Management\n}\n\nconst userRequired = ['artists']\n\nfunction useComponent() {\n  const queryParams = useQuery()\n  const currentUser = Parse.User.current()\n\n  for (const [key, component] of Object.entries(componentMap)) {\n    if (queryParams.has(key) && (currentUser || !userRequired.includes(key))) {\n      return component \n    }\n  }\n  return Home\n}\n\nfunction App() {\n  const Component = useComponent()\n  return (\n    <Box className=\"App\" padding={'35px'}>\n      <Component />\n    </Box>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport { Box, Button, TextField } from '@material-ui/core'\nimport { doUserLogin, doUserLogout, doUserRegistration, getCurrentUser, User } from './utility'\n\nexport default function Login() {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const [currentUser, setCurrentUser] = React.useState<User | undefined>()\n\n  React.useEffect(() => {\n    setCurrentUser(getCurrentUser())\n  }, [])\n\n  React.useEffect(() => {\n    setUsername('')\n    setPassword('')\n  }, [currentUser])\n\n  async function doLogout() {\n    await doUserLogout()\n    setCurrentUser(undefined)\n  }\n\n  async function doRegister() {\n    const user = await doUserRegistration({ username, password })\n    setCurrentUser(user)\n  }\n\n  async function doLogin() {\n    const user = await doUserLogin({ username, password })\n    setCurrentUser(user)\n  }\n\n  if (currentUser) {\n    return <Box>\n      <Box>Hi {currentUser.getUsername()}</Box>\n      <Box><Button onClick={doLogout}>Log Out</Button></Box>\n    </Box>\n  }\n\n  return <Box>\n    <Box>Login</Box>\n    <Box display={'flex'} justifyContent={'center'}>\n      <Box paddingRight={'10px'}>Username</Box>\n      <TextField value={username} onChange={(e) => setUsername(e.target.value)} />\n    </Box>\n    <Box display={'flex'} justifyContent={'center'}>\n      <Box paddingRight={'10px'}>Password</Box>\n      <TextField value={password} onChange={(e) => setPassword(e.target.value)} />\n    </Box>\n    <Box>\n      <Button onClick={doRegister}>Signup</Button>\n      <Button onClick={doLogin}>Login</Button>\n    </Box>\n  </Box>\n}","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { StatementsSelector } from '../FileSelector'\nimport { StatementRow } from '../../Types'\nimport { artistsFromSheetData } from '../statements/utility'\nimport { ArtistsImport } from './ArtistsImport'\nimport { getArtists } from './artist'\nimport { getMappings } from './artistMapping'\nimport { ArtistsManager } from './ArtistsManager'\n\nexport function Management() {\n  const [statementArtists, setStatementArtists] = React.useState<string[]>([])\n  const [manager, setManager] = React.useState<ArtistsManager>()\n\n  React.useEffect(() => {\n    getArtists().then((allArtists) => {\n      return getMappings(allArtists).then((mappings) => {\n        setManager(new ArtistsManager(allArtists, mappings))\n      })\n    })\n  }, [])\n\n  function statementImport(data: StatementRow[]) {\n    setStatementArtists(artistsFromSheetData(data))\n  }\n\n  if (!manager) return <Box>Loading...</Box>\n\n  return <Box>\n    <Box>Artist Management</Box>\n    <Box><StatementsSelector label={'Import File Data'} onStatementsSelect={statementImport} /></Box>\n    <ArtistsImport manager={manager} statementArtists={statementArtists} />\n  </Box>\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Parse from 'parse'\nimport reportWebVitals from './reportWebVitals'\n\nParse.initialize(\"ynIkTAKDSN7mx79IDrjsSm7yJJU43RsJe3fg3YKs\",\"2rY3C47KmEDJ5ja3QmtObRzIYIL4dXYZ72A9Eq4W\"); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\nParse.serverURL = 'https://parseapi.back4app.com/'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path={\"/stream-line\"} element={<App />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}