{"version":3,"sources":["components/statements/utility.ts","Types.ts","components/Helpers.ts","components/FileSelector.tsx","components/TrackDetails.tsx","components/Filters.tsx","components/Retailers.tsx","components/Locations.tsx","components/parseObj.ts","components/artists/artistMapping.ts","components/artists/artist.ts","components/Home.tsx","App.tsx","reportWebVitals.ts","components/artists/ArtistsImport.tsx","components/artists/ArtistsManager.ts","components/artists/Management.tsx","components/login/utility.ts","components/login/Login.tsx","index.tsx"],"names":["loadFile","file","a","Promise","resolve","reject","reader","FileReader","onload","e","data","target","result","name","onerror","readAsBinaryString","files","reduce","acc","then","fileData","statementColMap","Artist","ContentType","DeliveryMethod","Distributor","ISRC","Label","PeriodFrom","PeriodTo","Quantity","ReleaseTitle","Revenue","Territory","TrackTitle","Date","UPC","CountryName","TotalDownloads","AmountCurrency","Ignore","toStatement","rowObj","dataObj","Object","keys","forEach","col","objKey","find","key","includes","toLowerCase","console","log","dataCols","getMultiByKeyProp","byKeyProp","row","push","FileSelector","label","onLoad","React","useState","displayFiles","setDisplayFiles","selectedFiles","setSelectedFiles","Box","Button","variant","component","type","onChange","Array","from","hidden","multiple","length","border","padding","map","i","onClick","loadFiles","StatementsSelector","onStatementsSelect","asRows","values","sheetData","workbook","XLSX","sheetName","SheetNames","workSheet","Sheets","sheetRange","decode_range","testJson","sheet_to_csv","RS","startIndex","split","index","fullCols","filter","h","Error","sheet_to_json","range","s","c","r","loadStatementFile","TrackDetails","sheet","byIsrc","rows","isrc","id","track","title","quantity","revenue","artist","style","height","width","columns","field","headerName","ALL","SERIES_TYPES","Filters","onFiltersChanged","currentArtist","setCurrentArtist","currentSeries","setCurrentSeries","allArtists","setAllArtists","useEffect","artists","streamOrRevenue","Select","value","margin","MenuItem","series","Retailers","byRetailer","setByRetailer","setSeries","currentCategories","setCategories","availableSeries","setAvailableSeries","selectedSeries","setSelectedSeries","categories","retailer","streams","revTotal","streamTotal","options","chart","plotOptions","bar","borderRadius","horizontal","dataLabels","enabled","xaxis","Locations","byLocation","setByLocation","locations","setLocations","setData","getByLocation","labels","responsive","breakpoint","legend","position","Math","floor","random","ParseObj","parseObj","this","className","ArtistMapping","get","getMappings","byId","query","Parse","Query","parseObjs","mappedTo","mapping","save","getArtists","obj","Home","setSheet","mappings","setMappings","mapArtists","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ArtistsImport","manager","statementArtists","setArtists","neither","setNeither","artistSort","useCallback","sortNames","mapped","UnknownArtists","names","onUpdate","ExistingArtists","ExistingMappings","m","ArtistImport","isMapping","setIsMapping","createArtist","GetArtist","onSelect","createMapping","selected","setSelected","artistsByName","artistForName","ArtistsManager","existingArtists","existingMappings","mappingsByName","params","newArtist","newMapping","Management","setStatementArtists","setManager","Set","d","artistsFromSheetData","doUserRegistration","username","password","usernameValue","passwordValue","User","signUp","createdUser","alert","getUsername","Login","setUsername","setPassword","TextField","AppContainer","children","UserRequired","currentUser","setCurrentUser","navigate","useNavigate","current","initialize","serverURL","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.98170c6d.chunk.js","sourcesContent":["import { StatementRow } from '../../Types'\n\nexport type FileData = {\n  [fileName: string]: string\n}\n\nexport async function loadFile(file: File): Promise<{name: string, data: string}> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const data = e.target?.result as string\n      resolve({ name: file.name, data })\n    }\n    reader.onerror = reject\n    reader.readAsBinaryString(file)\n  })\n}\n\nexport async function loadFiles(files: File[]) {\n  return files.reduce((acc: Promise<FileData>, file) => {\n    return acc.then((fileData) => {\n      return loadFile(file).then(({name, data}) => {\n        fileData[name] = data\n        return fileData\n      })\n    })\n  }, Promise.resolve({}))\n}\n\nexport function artistsFromSheetData(data: StatementRow[]) {\n  return Array.from(new Set(data.map((d) => d.Artist)))\n}\n","export interface StatementRow {\n  Artist: string\n  ContentType: string\n  DeliveryMethod: string\n  Distributor: string\n  ISRC: string\n  Label: string\n  PeriodFrom: string\n  PeriodTo: string\n  Quantity: number\n  ReleaseTitle: string\n  Revenue: number\n  Territory: string\n  TrackTitle: string\n  UPC: string\n}\n\nexport const statementColMap: {[key: string]: string[]} = {\n  Artist: ['artist'],\n  ContentType: ['content type'],\n  DeliveryMethod: ['delivery method'],\n  Distributor: ['distributor', 'store'],\n  ISRC: ['isrc'],\n  Label: ['label'],\n  PeriodFrom: ['period from', 'sales start date'],\n  PeriodTo: ['period to', 'sales end date'],\n  Quantity: ['quantity', 'total plays'],\n  ReleaseTitle: ['release title', 'album name'],\n  Revenue: ['revenue', 'amount'],\n  Territory: ['territory', 'country iso'],\n  TrackTitle: ['track title', 'track name'],\n\n  Date: ['date'],\n  UPC: ['upc', 'ean/upc'],\n  CountryName: ['country name'],\n  TotalDownloads: ['total downloads'],\n  AmountCurrency: ['amount currency'],\n\n  Ignore: ['cat. no.', 'suitebeats comp.']\n}\n","import * as XLSX from 'xlsx'\nimport { statementColMap, StatementRow } from '../Types'\n\nfunction toStatement(rowObj: {[key: string]: string}): StatementRow {\n  const dataObj: {[key: string]: string} = {}\n  Object.keys(rowObj).forEach((col) => {\n    const objKey = Object.keys(statementColMap).find((key) => {\n      return statementColMap[key].includes(col.toLowerCase())\n    })\n    if (!objKey) {\n      console.log('not mapping:', col, rowObj[col])\n    } else if (objKey !== 'Ignore') {\n      dataObj[objKey] = rowObj[col]\n    }\n  })\n  return dataObj as unknown as StatementRow\n}\n\nconst dataCols = [\n  'Period From',\n  'Period To',\n  'Transaction Data',\n  'Distributor',\n  'UPC',\n  'Cat. No.',\n  'ISRC',\n  'Label',\n  'Release Title',\n  'Track Title',\n  'Mix Name',\n  'Artist',\n  'Content Type',\n  'Delivery Method',\n  'Territory',\n  'Quantity',\n  'Revenue',\n  'Sales Start Date',\n  'Sales End Date',\n  'EAN/UPC',  // what is this\n  'Album Name',\n  'Track Name',\n  'Store',\n  'Country Name',\n  'Country ISO',\n  'Total Plays',\n  'Total Downloads',\n  'Amount',\n  'Amount Currency'\n]\n\nexport function loadStatementFile(data: string): StatementRow[] {\n  const workbook = XLSX.read(data, {\n    type: 'binary'\n  });\n  const sheetName = workbook.SheetNames[0]\n  const workSheet = workbook.Sheets[sheetName]\n  const sheetRange = XLSX.utils.decode_range(workSheet['!ref']!)\n  const testJson = XLSX.utils.sheet_to_csv(workSheet, { RS: '\\n'})\n  let startIndex = -1\n  testJson.split('\\n').forEach((row, index) => {\n    if (startIndex >= 0) return\n    const fullCols = row.split(',').filter((h) => !!h)\n    const cols = fullCols.filter((col) => dataCols.includes(col))\n    if (cols.length > fullCols.length / 2) {\n      startIndex = index\n    }\n  })\n  if (startIndex < 0) {\n    throw new Error('header row not found')\n  }\n\n  const asJson = XLSX.utils.sheet_to_json<{[key: string]: string}>(workSheet, { range: { s: { c:0, r:startIndex }, e: sheetRange.e}})\n  return asJson.map(toStatement)\n}\n\nexport function getByIsrc(data: StatementRow[]) {\n  return getMultiByKeyProp('ISRC', data)\n}\n\nexport function getByTerritory(data: StatementRow[]) {\n  return getMultiByKeyProp('Territory', data)\n}\n\nexport function getByArtist(data: StatementRow[]) {\n  return getMultiByKeyProp('Artist', data)\n}\n\nexport function getByRetailer(data: StatementRow[]) {\n  return getMultiByKeyProp('Distributor', data)\n}\n\nexport function getByLocation(data: StatementRow[]) {\n  return getMultiByKeyProp('Territory', data)\n}\n\nexport function getMultiByKeyProp(key: keyof StatementRow, data: StatementRow[]) {\n  const byKeyProp: {[key: string]: StatementRow[]} = {}\n  data.forEach((row) => {\n    !byKeyProp[row[key]] && (byKeyProp[row[key]] = [])\n    byKeyProp[row[key]].push(row)\n  })\n  return byKeyProp\n}\n\nexport function consolidateRvByDate(data: StatementRow[]) {\n  const byDate: { [key: string]: number } = {}\n  data?.forEach((d) => {\n    !byDate[d.PeriodTo] && (byDate[d.PeriodTo] = 0)\n    byDate[d.PeriodTo] += d.Revenue\n  })\n  return byDate\n}\n","import React from 'react';\nimport { Box, Button } from '@material-ui/core'\nimport { FileData, loadFiles } from './statements/utility'\nimport { StatementRow } from '../Types'\nimport { loadStatementFile } from './Helpers'\n\nfunction FileSelector({ label, onLoad }: { label?: string; onLoad: (data: FileData) => void }) {\n  const [displayFiles, setDisplayFiles] = React.useState(false)\n  const [selectedFiles, setSelectedFiles] = React.useState<File[]>([])\n\n  function filesSelected(e: any) {\n    setSelectedFiles(Array.from(e.target.files))\n  }\n\n  function processFiles() {\n    loadFiles(selectedFiles).then(onLoad).then(() => setDisplayFiles(false))\n  }\n\n  if (!displayFiles) {\n    return <Box><Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setDisplayFiles(true)}\n    >Select Files</Button>\n    </Box>\n  }\n\n  return <Box><Button\n    variant=\"contained\"\n    component=\"label\"\n  >\n    Select Files\n    <input\n      type=\"file\"\n      onChange={filesSelected}\n      hidden\n      multiple\n    />\n  </Button>\n    {!!selectedFiles.length && <Box border={'1px solid'} padding={'5px'}>\n      <Box>Selected Files:</Box>\n      <Box padding={'5px'}>\n        {selectedFiles.map((file, i) => <Box key={i}>{file.name}</Box>)}\n        <Box><Button onClick={processFiles}>{label || 'DoIt'}</Button></Box>\n      </Box>\n    </Box>}\n  </Box>\n}\n\nexport function StatementsSelector({onStatementsSelect, label}: {label?: string, onStatementsSelect: (rows: StatementRow[]) => void}) {\n  function onSelect(data: FileData) {\n    const asRows = Object.values(data).reduce((acc: StatementRow[], sheetData) => {\n      acc.push(...loadStatementFile(sheetData))\n      return acc\n    }, [])\n    onStatementsSelect(asRows)\n  }\n\n  return <FileSelector onLoad={onSelect} label={label} />\n}\n","import { DataGrid, GridColDef, GridRowData, GridRowsProp } from '@material-ui/data-grid'\nimport { StatementRow } from '../Types'\nimport { getByIsrc } from './Helpers'\n\nexport default function TrackDetails({ sheet }: { sheet: StatementRow[]}) {\n  const cols: GridColDef[] = [\n    { field: 'title', headerName: 'Title', width: 150 },\n    { field: 'artist', headerName: 'Artist', width: 150 },\n    { field: 'quantity', headerName: 'Quantity', width: 150 },\n    { field: 'revenue', headerName: 'Revenue', width: 150 }\n  ]\n\n  const byIsrc = getByIsrc(sheet)\n  const rows: GridRowsProp = Object.keys(byIsrc).map((isrc, i) => {\n    const data: GridRowData = { id: i }\n    byIsrc[isrc].forEach((track) => {\n      data.title = track.TrackTitle\n      !data.quantity && (data.quantity = 0)\n      data.quantity += track.Quantity\n      !data.revenue && (data.revenue = 0)\n      data.revenue += track.Revenue\n      data.artist = track.Artist\n    })\n    return data\n  })\n\n  return <div style={{ height: 300, width: '100%' }}>\n    <DataGrid rows={rows} columns={cols}></DataGrid>\n  </div>\n}\n","import React from 'react'\nimport { StatementRow } from '../Types'\nimport { Box, MenuItem, Select } from '@material-ui/core'\n\nexport const ALL = 'all'\nconst SERIES_TYPES = ['streams', 'revenue']\n\nexport interface IFilters {\n  artist: string\n  streamOrRevenue: string\n}\n\nexport default function Filters({ sheet, onFiltersChanged }: { sheet: StatementRow[], onFiltersChanged: (filters: IFilters) => void}) {\n  const [currentArtist, setCurrentArtist] = React.useState('')\n  const [currentSeries, setCurrentSeries] = React.useState('')\n  const [allArtists, setAllArtists] = React.useState<string[]>([])\n\n  React.useEffect(() => {\n    const artists: string[] = []\n    sheet.forEach((row) => {\n      if (row.Artist && !artists.includes(row.Artist)) {\n        artists.push(row.Artist)\n      }\n    })\n    setAllArtists(artists)\n    setCurrentArtist(ALL)\n    setCurrentSeries(SERIES_TYPES[0])\n  }, [sheet])\n\n  React.useEffect(() => {\n    onFiltersChanged({ artist: currentArtist, streamOrRevenue: currentSeries})\n  }, [currentSeries, currentArtist, onFiltersChanged])\n\n  return <Box>\n    <Select\n      value={currentArtist}\n      onChange={(e) => setCurrentArtist(e.target.value as string)}\n      style={{padding: 6, margin: 6}}\n    >\n      <MenuItem value={ALL}>All</MenuItem>\n      {allArtists.map((a) => <MenuItem key={a} value={a}>{a}</MenuItem>)}\n    </Select>\n    <Select\n      value={currentSeries}\n      onChange={(e) => setCurrentSeries(e.target.value as string)}\n      style={{padding: 6, margin: 6}}\n    >\n      {SERIES_TYPES.map((series) => {\n        return <MenuItem key={series} value={series}>{series}</MenuItem>\n      })}\n    </Select>\n  </Box>\n}","import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { StatementRow } from '../Types'\nimport { getByRetailer } from './Helpers'\nimport { ApexOptions } from 'apexcharts'\nimport { Box } from '@material-ui/core'\nimport Filters, { ALL, IFilters } from './Filters'\n\nexport default function Retailers({ sheet }: { sheet: StatementRow[] }) {\n  const [byRetailer, setByRetailer] = React.useState<{[retailer: string]: StatementRow[]}>({})\n  const [currentSeries, setSeries] = React.useState<{ data: number[] }[]>([])\n  const [currentCategories, setCategories] = React.useState<string[]>([])\n  const [currentArtist, setCurrentArtist] = React.useState('')\n  const [availableSeries, setAvailableSeries] = React.useState<{[label: string]: number[]}>({})\n  const [selectedSeries, setSelectedSeries] = React.useState('')\n\n  React.useEffect(() => {\n    const byRetailer = getByRetailer(sheet)\n    const categories: string[] = []\n    Object.keys(byRetailer).forEach((retailer) => {\n      categories.push(retailer)\n    })\n    setByRetailer(byRetailer)\n    setCategories(categories)\n  }, [sheet])\n\n  React.useEffect(() => {\n    const revenue: number[] = []\n    const streams: number[] = []\n    Object.keys(byRetailer).forEach((retailer) => {\n      let revTotal = 0\n      let streamTotal = 0\n      byRetailer[retailer].forEach((track) => {\n        if (currentArtist === ALL || currentArtist === track.Artist) {\n          revTotal += track.Revenue\n          streamTotal += track.Quantity\n        }\n      })\n      revenue.push(revTotal)\n      streams.push(streamTotal)\n    })\n    setAvailableSeries({ revenue, streams })\n    setSeries([{ data: streams }])\n  }, [currentArtist, byRetailer])\n\n  React.useEffect(() => {\n    if (availableSeries[selectedSeries]) {\n      setSeries([{data: availableSeries[selectedSeries]}])\n    }\n  }, [selectedSeries, availableSeries])\n\n  function onFilterChange({ artist, streamOrRevenue }: IFilters) {\n    setCurrentArtist(artist)\n    setSelectedSeries(streamOrRevenue)\n  }\n\n  const options: ApexOptions = {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        horizontal: true,\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    xaxis: {\n      categories: currentCategories,\n    }\n  }\n  return <Box>\n    <Filters sheet={sheet} onFiltersChanged={onFilterChange} />\n    <ReactApexChart options={options} series={currentSeries} type=\"bar\" height={350} />\n  </Box>\n}\n","import React from 'react'\nimport { StatementRow } from '../Types'\nimport { getByLocation } from './Helpers'\nimport { ApexOptions } from 'apexcharts'\nimport ReactApexChart from 'react-apexcharts'\nimport { Box } from '@material-ui/core'\nimport Filters, { ALL, IFilters } from './Filters'\n\nexport default function Locations({ sheet }: { sheet: StatementRow[] }) {\n  const [byLocation, setByLocation] = React.useState<{ [location: string]: StatementRow[]}>({})\n  const [locations, setLocations] = React.useState<string[]>([])\n  const [currentArtist, setCurrentArtist] = React.useState('')\n  const [selectedSeries, setSelectedSeries] = React.useState('')\n  const [data, setData] = React.useState<number[]>([])\n  const [availableSeries, setAvailableSeries] = React.useState<{[label: string]: number[]}>({})\n\n  React.useEffect(() => {\n    const byLocation = getByLocation(sheet)\n    setLocations(Object.keys(byLocation))\n    setByLocation(byLocation)\n  }, [sheet])\n\n  React.useEffect(() => {\n    const revenue: number[] = []\n    const streams: number[] = []\n    Object.keys(byLocation).forEach((retailer) => {\n      let revTotal = 0\n      let streamTotal = 0\n      byLocation[retailer].forEach((track) => {\n        if (currentArtist === ALL || currentArtist === track.Artist) {\n          revTotal += track.Revenue\n          streamTotal += track.Quantity\n        }\n      })\n      revenue.push(revTotal)\n      streams.push(streamTotal)\n    })\n    setAvailableSeries({ revenue, streams })\n  }, [currentArtist, byLocation])\n\n  React.useEffect(() => {\n    if (availableSeries[selectedSeries]) {\n      setData([...availableSeries[selectedSeries]])\n    }\n  }, [selectedSeries, availableSeries])\n\n  function onFilterChange({ artist, streamOrRevenue }: IFilters) {\n    setCurrentArtist(artist)\n    setSelectedSeries(streamOrRevenue)\n  }\n\n  const options = (): ApexOptions => ({\n    chart: {\n      type: 'donut',\n    },\n    labels: locations,\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          width: 200\n        },\n        legend: {\n          position: 'bottom'\n        }\n      }\n    }]\n  })\n\n  return <Box>\n    <Filters sheet={sheet} onFiltersChanged={onFilterChange} />\n    <ReactApexChart options={options()} series={data} type=\"donut\" height={350 + Math.floor(Math.random() * 2) + 1} />\n  </Box>\n}\n","import Parse from 'parse'\n\nexport interface IParseObj {\n  parseObj: Parse.Object\n}\n\nexport class ParseObj {\n  parseObj: Parse.Object\n  constructor(parseObj: Parse.Object) {\n    this.parseObj = parseObj\n  }\n  get id() {\n    return this.parseObj.id\n  }\n}\n","import Parse from 'parse'\nimport { ParseObj } from '../parseObj'\nimport { IArtist } from './artist'\n\nconst className = 'ArtistMapping'\n\nexport interface IArtistMapping {\n  name: string\n  mappedTo: IArtist\n}\n\nclass ArtistMapping extends ParseObj {\n  artist: IArtist\n\n  constructor(parseObj: Parse.Object, artist: IArtist) {\n    super(parseObj)\n    this.artist = artist\n  }\n\n  get name() {\n    return this.parseObj.get('name')\n  }\n  get mappedTo() {\n    return this.artist\n  }\n}\n\nexport async function getMappings(allArtists: IArtist[]) {\n  const byId = allArtists.reduce((acc: {[id: string]: IArtist}, artist) => {\n    acc[artist.id] = artist\n    return acc\n  }, {})\n  const query = new Parse.Query(className)\n  return query.find()\n    .then((parseObjs) => {\n      return parseObjs.reduce((acc: {[n: string]: IArtistMapping}, parseObj) => {\n        const artist = new ArtistMapping(parseObj, byId[parseObj.get('mappedTo').id])\n        acc[artist.name] = artist\n        return acc\n      }, {})\n    })\n}\n\nexport async function createMapping({ name, mappedTo }: {\n  name: string\n  mappedTo: IArtist\n}): Promise<IArtistMapping> {\n  const mapping = new Parse.Object(className, { name, mappedTo: mappedTo.parseObj })\n  return mapping.save().then((parseObj) => new ArtistMapping(parseObj, mappedTo))\n}\n","import Parse from 'parse'\nimport { IParseObj, ParseObj } from '../parseObj'\nimport { StatementRow } from '../../Types'\nimport { IArtistMapping } from './artistMapping'\n\nconst className = 'Artist'\n\nexport interface IArtist extends IParseObj{\n  id: string\n  name: string\n}\n\nexport class Artist extends ParseObj {\n  get name() {\n    return this.parseObj.get('name')\n  }\n}\n\nexport async function getArtists() {\n  const query = new Parse.Query(className)\n  return query.find().then((parseObjs) => parseObjs.map((obj) => new Artist(obj)))\n}\n\nexport async function createArtist({ name }: { name: string }) {\n  const artist = new Parse.Object(className, { name })\n  return artist.save().then((parseObj) => new Artist(parseObj))\n}\n\nexport function mapArtists(rows: StatementRow[], mapping: {[name: string]: IArtistMapping}) {\n  return rows.map((row) => {\n    row.Artist = mapping[row.Artist]?.mappedTo.name || row.Artist\n    return row\n  })\n}\n","import React from 'react'\nimport { StatementRow } from '../Types'\nimport { StatementsSelector } from './FileSelector'\nimport TrackDetails from './TrackDetails'\nimport Retailers from './Retailers'\nimport Locations from './Locations'\nimport { Box } from '@material-ui/core'\nimport { getMappings, IArtistMapping } from './artists/artistMapping'\nimport { getArtists, mapArtists } from './artists/artist'\n\nexport default function Home() {\n  const [sheet, setSheet] = React.useState<StatementRow[]>([])\n  const [mappings, setMappings] = React.useState<{[name: string]: IArtistMapping}>()\n\n  React.useState(() => {\n    getArtists().then((allArtists) => {\n      getMappings(allArtists).then(setMappings)\n    })\n  })\n\n  if (!mappings) return <Box>Loading...</Box>\n\n  function onStatementsSelect(rows: StatementRow[]) {\n    if (!mappings) {\n      setSheet(rows)\n    } else {\n      setSheet(mapArtists(rows, mappings))\n    }\n  }\n\n  return <Box style={{ padding: 25 }}>\n    <Box style={{ padding: 25 }}>\n      <StatementsSelector onStatementsSelect={onStatementsSelect} />\n    </Box>\n    {!!sheet.length && <Box style={{ padding: 25, border: 'solid 1px' }}>\n      Tracks\n      <div style={{ padding: 25 }}>\n        <TrackDetails sheet={sheet} />\n      </div>\n      Retailers\n      <div style={{ padding: 25 }}>\n        <Retailers sheet={sheet} />\n      </div>\n      Locations\n      <div style={{ padding: 25 }}>\n        <Locations sheet={sheet} />\n      </div>\n    </Box>\n    }\n  </Box>\n}\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport { Box } from '@material-ui/core'\n\nfunction App() {\n  return (\n    <Box className=\"App\">\n          <Home />\n    </Box>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Box, Button, MenuItem, Select } from '@material-ui/core'\nimport { IArtist } from './artist'\nimport { ArtistsManager, IArtistsByName, IMappingsByName } from './ArtistsManager'\n\nexport function ArtistsImport({manager, statementArtists}: {\n  manager: ArtistsManager\n  statementArtists: string[]\n}) {\n  const [mappings, setMappings] = React.useState<IMappingsByName>({})\n  const [artists, setArtists] = React.useState<IArtistsByName>({})\n  const [neither, setNeither] = React.useState<string[]>([])\n\n  const artistSort = React.useCallback(() => {\n    const {artists, mapped, neither} = manager.sortNames(statementArtists)\n    setArtists(artists)\n    setMappings(mapped)\n    setNeither(neither)\n  }, [manager, statementArtists])\n\n  React.useEffect(() => {\n    artistSort()\n  }, [artistSort])\n\n  return <Box>\n    <UnknownArtists names={neither} manager={manager} onUpdate={artistSort}/>\n    <ExistingArtists artists={artists} />\n    <ExistingMappings mappings={mappings} />\n  </Box>\n}\n\nfunction ExistingArtists({ artists }: { artists: IArtistsByName }) {\n  return <Box border={'solid 1px'} padding={'5px'}>\n    <Box><b>Artists</b></Box>\n    <Box padding={'10px'}>{Object.values(artists).map((a) => <Box>{a.name}</Box>)}</Box>\n  </Box>\n}\n\nfunction ExistingMappings({ mappings }: { mappings: IMappingsByName }) {\n  return <Box border={'solid 1px'} padding={'5px'}>\n    <Box><b>Mappings</b></Box>\n    <Box padding={'10px'}>{Object.values(mappings).map((m) => <Box>{m.name}<b>{' MAPPED TO: '}</b>{m.mappedTo.name}</Box>)}</Box>\n  </Box>\n}\n\nfunction UnknownArtists({ names, manager, onUpdate }: { names: string[]; manager: ArtistsManager; onUpdate: () => void }) {\n  return <Box border={'solid 1px'} padding={'5px'}>\n    <Box><b>Unknown Artists</b></Box>\n    <Box padding={'10px'}>{names.map((name) => <ArtistImport manager={manager} name={name} onUpdate={onUpdate}/>)}</Box>\n  </Box>\n}\n\nfunction ArtistImport({ name, manager, onUpdate }: {\n  name: string\n  manager: ArtistsManager\n  onUpdate: () => void\n}) {\n  const [isMapping, setIsMapping] = React.useState(false)\n\n  function doIt() {\n    manager.createArtist({ name }).then(onUpdate)\n  }\n\n  function doMapping(mappedTo: IArtist) {\n    manager.createMapping({ name, mappedTo }).then(onUpdate)\n  }\n\n  return <Box>\n    <Box>\n      {name}\n      <Button onClick={doIt}>Import</Button>\n      <Button onClick={() => setIsMapping(true)}>Map To Existing</Button>\n    </Box>\n    {isMapping && <GetArtist manager={manager} onSelect={doMapping} />}\n  </Box>\n}\n\nfunction GetArtist({ manager, onSelect }: {\n  manager: ArtistsManager\n  onSelect: (artist: IArtist) => void\n}) {\n  const [selected, setSelected] = React.useState<string>()\n\n  return <Box>\n    <Select\n      value={selected}\n      onChange={(e) => setSelected(e.target.value as string)}\n    >\n      {Object.keys(manager.artistsByName).map((key) => <MenuItem key={key} value={key}>{key}</MenuItem>)}\n    </Select>\n    {selected && <Button onClick={() => onSelect(manager.artistForName(selected))}>Map It</Button>}\n  </Box>\n}\n","import { createMapping, IArtistMapping } from './artistMapping'\nimport { createArtist, IArtist } from './artist'\n\nexport type IArtistsByName = {\n  [name: string]: IArtist\n}\n\nexport type IMappingsByName = {\n  [name: string]: IArtistMapping\n}\n\ninterface INameSort {\n  artists: IArtistsByName\n  mapped: IMappingsByName\n  neither: string[]\n}\n\nexport class ArtistsManager {\n  artistsByName: {[name: string]: IArtist}\n  mappingsByName: {[name: string]: IArtistMapping}\n\n  constructor(existingArtists: IArtist[], existingMappings: {[name: string]: IArtistMapping}) {\n    this.artistsByName = existingArtists.reduce((acc: {[name: string]: IArtist}, artist) => {\n      acc[artist.name] = artist\n      return acc\n    }, {})\n    this.mappingsByName = existingMappings\n  }\n\n  createArtist(params: { name: string }) {\n    return createArtist(params).then((newArtist) => {\n      this.artistsByName[newArtist.name] = newArtist\n      return newArtist\n    })\n  }\n\n  createMapping(params: { name: string, mappedTo: IArtist}) {\n    return createMapping(params).then((newMapping) => {\n      this.mappingsByName[newMapping.name] = newMapping\n      return newMapping\n    })\n  }\n\n  artistForName(name: string) {\n    return this.artistsByName[name]\n  }\n  mappingForName(name: string) {\n    return this.mappingsByName[name]\n  }\n\n  sortNames(names: string[]) {\n    return names.reduce(({artists, mapped, neither}: INameSort, name) => {\n      if (this.artistsByName[name]) {\n        artists[name] = this.artistsByName[name]\n      } else if (this.mappingsByName[name]) {\n        mapped[name] = this.mappingsByName[name]\n      } else {\n        neither.push(name)\n      }\n      return {artists, mapped, neither}\n    }, {artists: {}, mapped: {}, neither: []})\n  }\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { StatementsSelector } from '../FileSelector'\nimport { StatementRow } from '../../Types'\nimport { artistsFromSheetData } from '../statements/utility'\nimport { ArtistsImport } from './ArtistsImport'\nimport { getArtists } from './artist'\nimport { getMappings } from './artistMapping'\nimport { ArtistsManager } from './ArtistsManager'\n\nexport function Management() {\n  const [statementArtists, setStatementArtists] = React.useState<string[]>([])\n  const [manager, setManager] = React.useState<ArtistsManager>()\n\n  React.useEffect(() => {\n    getArtists().then((allArtists) => {\n      return getMappings(allArtists).then((mappings) => {\n        setManager(new ArtistsManager(allArtists, mappings))\n      })\n    })\n  }, [])\n\n  function statementImport(data: StatementRow[]) {\n    setStatementArtists(artistsFromSheetData(data))\n  }\n\n  if (!manager) return <Box>Loading...</Box>\n\n  return <Box>\n    <Box>Artist Management</Box>\n    <Box><StatementsSelector label={'Import File Data'} onStatementsSelect={statementImport} /></Box>\n    <ArtistsImport manager={manager} statementArtists={statementArtists} />\n  </Box>\n}\n","import Parse from 'parse'\n\nexport const doUserRegistration = async function ({ username, password}: {username: string; password: string}): Promise<boolean> {\n  // Note that these values come from state variables that we've declared before\n  const usernameValue: string = username\n  const passwordValue: string = password\n  try {\n    // Since the signUp method returns a Promise, we need to call it using await\n    const createdUser: Parse.User = await Parse.User.signUp(usernameValue, passwordValue, {})\n    alert(\n      `Success! User ${createdUser.getUsername()} was successfully created!`,\n    )\n    return true\n  } catch (error: any) {\n    // signUp can fail if any parameter is blank or failed an uniqueness check on the server\n    alert(`Error! ${error}`)\n    return false\n  }\n}\n","import React from 'react';\nimport { Box, Button, TextField } from '@material-ui/core'\nimport { doUserRegistration } from './utility'\n\nexport default function Login() {\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n\n  return <Box>\n    <Box>Login</Box>\n    <Box>Username<TextField value={username} onChange={(e) => setUsername(e.target.value)} /></Box>\n    <Box>Password<TextField value={password} onChange={(e) => setPassword(e.target.value)} /></Box>\n    <Box><Button onClick={() => doUserRegistration({username, password})}>Signup</Button></Box>\n  </Box>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse'\nimport { Management } from './components/artists/Management'\nimport Login from './components/login/Login'\nimport { Box } from '@material-ui/core'\n\nParse.initialize(\"ynIkTAKDSN7mx79IDrjsSm7yJJU43RsJe3fg3YKs\",\"2rY3C47KmEDJ5ja3QmtObRzIYIL4dXYZ72A9Eq4W\"); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\nParse.serverURL = 'https://parseapi.back4app.com/'\n\nfunction AppContainer({children}: {children: any}) {\n  return <Box padding={'35px'}>{children}</Box>\n}\n\nfunction UserRequired({children}: {children: any}) {\n  const [currentUser, setCurrentUser] = React.useState<Parse.Object>()\n  const navigate = useNavigate()\n\n  React.useEffect(() => {\n    const currentUser = Parse.User.current()\n    if (!currentUser) navigate('/stream-line')\n    setCurrentUser(currentUser)\n  }, [navigate])\n\n  if (!currentUser) return <Box></Box>\n\n  return <Box>{children}</Box>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AppContainer>\n      <Routes>\n        <Route path={\"/stream-line\"} element={<App />} />\n        <Route path={\"/artist-management\"} element={<UserRequired><Management /></UserRequired>} />\n        <Route path={\"/login\"} element={<Login />} />\n      </Routes>\n      </AppContainer>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}